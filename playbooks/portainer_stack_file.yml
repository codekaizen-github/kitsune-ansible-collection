---
# ansible-playbook -e kitsune_portainer_domain=portainer.umerx.app -e kitsune_portainer_admin_username=admin -e kitsune_portainer_admin_password='adminpassword'  -e kitsune_stack_name=test14 -e '{"kitsune_stack_env": [{"name": "KEY_ONE", "value": "VALUE_ONE"}, {"name": "KEY_TWO", "value": "VALUE_TWO"}]}' -e kitsune_stack_endpoint_id=6  playbooks/portainer_stack_file.yml  -vvv
- name: Deploy Docker Compose stack to Portainer using file
  hosts: '{{kitsune_target|default("localhost")}}'
  tasks:
    - name: Set kitsune_stack_env default
      ansible.builtin.set_fact:
        # kitsune_stack_env: '{{ [{"name": "KEY_ONE", "value": "VALUE_ONE"}, {"name": "KEY_TWO", "value": "VALUE_TWO"}] }}'
        kitsune_stack_env: "{{ kitsune_stack_env | default([]) }}"
    - name: Assert required variables are defined
      ansible.builtin.assert:
        that:
          - kitsune_portainer_domain is defined
          - kitsune_portainer_admin_username is defined
          - kitsune_portainer_admin_password is defined
          - kitsune_docker_compose_stack_docker_compose_file_src_template_file is defined
          - kitsune_stack_name is defined
          - kitsune_stack_endpoint_id is defined
          # If kitsune_stack_env is defined, must be list of dictionaries
          - kitsune_stack_env is defined and kitsune_stack_env | type_debug == 'list'
          - kitsune_stack_env is defined and kitsune_stack_env | selectattr('name', 'defined') | list | unique | length == kitsune_stack_env | length
          - kitsune_stack_env is defined and kitsune_stack_env | selectattr('value', 'defined') | list | unique | length == kitsune_stack_env | length
    - name: Template the docker-compose.yml file
      ansible.builtin.set_fact:
        kitsune_docker_compose_stack_docker_compose_file_definition:
          "{{ lookup('ansible.builtin.template',
          kitsune_docker_compose_stack_docker_compose_file_src_template_file) }}"
    - name: Define portainer credentials as dictionary
      ansible.builtin.set_fact:
        kitsune_portainer_admin_credentials:
          Username: "{{ kitsune_portainer_admin_username }}"
          Password: "{{ kitsune_portainer_admin_password }}"
    - name: Get the JWT token using URI
      ansible.builtin.uri:
        url: "https://{{ kitsune_portainer_domain }}/api/auth"
        method: POST
        body_format: json
        body: "{{ kitsune_portainer_admin_credentials }}"
        status_code: 200
        validate_certs: false
        return_content: true
        timeout: "{{ kitsune_portainer_api_timeout }}"
      register: kitsune_portainer_jwt_token_response
    # https://app.swaggerhub.com/apis/portainer/portainer-ce/2.20.2#/stacks/StackCreateDockerStandaloneFile
    - name: Create new stack
      ansible.builtin.uri:
        url: "https://{{ kitsune_portainer_domain }}/api/stacks/create/standalone/file?endpointId={{ kitsune_stack_endpoint_id }}"
        method: POST
        body_format: form-multipart
        body:
          Name: "{{ kitsune_stack_name }}"
          Env: "{{ kitsune_stack_env | to_json }}"
          file:
            content: "{{ kitsune_docker_compose_stack_docker_compose_file_definition }}"
            filename: docker-compose.yml
        headers:
          Authorization: "Bearer {{ kitsune_portainer_jwt_token_response.json.jwt }}"
        status_code: 200
        validate_certs: false
        return_content: true
        timeout: "{{ kitsune_portainer_api_timeout }}"
      register: kitsune_portainer_stack_response
