---
# ansible-playbook -e portainer_domain=portainer.umerx.app -e portainer_admin_username=admin -e portainer_admin_password='adminpassword'  -e stack_name=test14 -e '{"stack_env": [{"name": "KEY_ONE", "value": "VALUE_ONE"}, {"name": "KEY_TWO", "value": "VALUE_TWO"}]}' -e stack_endpoint_id=6  playbooks/portainer_stack.yml  -vvv
- name: Deploy Docker Compose stack to Portainer
  hosts: '{{target|default("localhost")}}'
  tasks:
    - name: Set stack_env default
      ansible.builtin.set_fact:
        # stack_env: '{{ [{"name": "KEY_ONE", "value": "VALUE_ONE"}, {"name": "KEY_TWO", "value": "VALUE_TWO"}] }}'
        stack_env: "{{ stack_env | default([]) }}"
    - name: Debug stack_env
      ansible.builtin.debug:
        var: stack_env
    - name: Assert required variables are defined
      ansible.builtin.assert:
        that:
          - portainer_domain is defined
          - portainer_admin_username is defined
          - portainer_admin_password is defined
          - docker_compose_stack_docker_compose_file_src_template_file is defined
          - stack_name is defined
          - stack_endpoint_id is defined
          # If stack_env is defined, must be list of dictionaries
          - stack_env is defined and stack_env | type_debug == 'list'
          - stack_env is defined and stack_env | selectattr('name', 'defined') | list | unique | length == stack_env | length
          - stack_env is defined and stack_env | selectattr('value', 'defined') | list | unique | length == stack_env | length
    - name: Template the docker-compose.yml file
      ansible.builtin.set_fact:
        docker_compose_stack_docker_compose_file_definition:
          "{{ lookup('ansible.builtin.template',
          docker_compose_stack_docker_compose_file_src_template_file) }}"
    - name: Define portainer credentials as dictionary
      ansible.builtin.set_fact:
        portainer_admin_credentials:
          Username: "{{ portainer_admin_username }}"
          Password: "{{ portainer_admin_password }}"
    - name: Get the JWT token using URI
      ansible.builtin.uri:
        url: "https://{{ portainer_domain }}/api/auth"
        method: POST
        body_format: json
        body: "{{ portainer_admin_credentials }}"
        status_code: 200
        validate_certs: false
        return_content: true
      register: portainer_jwt_token_response
    # https://app.swaggerhub.com/apis/portainer/portainer-ce/2.20.2#/stacks/StackCreateDockerStandaloneFile
    - name: Create new stack
      ansible.builtin.uri:
        url: "https://{{ portainer_domain }}/api/stacks/create/standalone/file?endpointId={{ stack_endpoint_id }}"
        method: POST
        body_format: form-multipart
        body:
          Name: "{{ stack_name }}"
          Env: "{{ stack_env | to_json }}"
          file:
            content: "{{ docker_compose_stack_docker_compose_file_definition }}"
            filename: docker-compose.yml
        headers:
          Authorization: "Bearer {{ portainer_jwt_token_response.json.jwt }}"
        status_code: 200
        validate_certs: false
        return_content: true
      register: portainer_stack_response
